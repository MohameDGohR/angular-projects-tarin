{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data/data.component.ts","webpack:///src/app/data/data.component.html","webpack:///src/app/directives/directives.component.ts","webpack:///src/app/directives/directives.component.html","webpack:///src/app/favorite/favorite.component.ts","webpack:///src/app/favorite/favorite.component.html","webpack:///src/app/input-formate.directive.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/panel/panel.component.ts","webpack:///src/app/panel/panel.component.html","webpack:///src/app/routing-component/routing-component.component.ts","webpack:///src/app/routing-component/routing-component.component.html","webpack:///src/app/services/posts.service.ts","webpack:///src/app/summary.pipe.ts","webpack:///src/app/validations/uniqness.customvald.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","declarations","AppComponent","title","status","firstname","console","log","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","DataComponent","postservice","getposts","subscribe","res","posts","post","updatepost","index","deletePosts","splice","value","createposts","response","DirectivesComponent","Person","PeopleCountry","country","names","name","courses","CourseName","value1","i","WhatColor","push","defaultview","course","indexOf","undefined","onadd","setview","mapcolor","FavoriteComponent","isfavourite","change","Employee","rating","salary","hiringdate","Date","news","emit","onfavouriteclick","InputFormateDirective","ref","valueget","nativeElement","formate","toUpperCase","toLowerCase","LoginComponent","form","email","required","CheckUniqness","password","setErrors","invalidlogin","get","login","PanelComponent","RoutingComponentComponent","PostsService","http","url","map","posted","put","providedIn","SummaryPipe","limit","actuallimit","substring","UniqnessValidator","control","reject","setTimeout","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DataComponent } from './data/data.component';\nimport { FavoriteComponent } from './favorite/favorite.component';\n\n\n\n\nconst routes: Routes = [\n   {path: 'login', component: LoginComponent} ,\n   {path: 'data', component: DataComponent} ,\n   {path: 'favorite', component: FavoriteComponent}\n];\n\n@NgModule({\n   imports: [\n      RouterModule.forRoot(routes)\n   ],\n   exports: [\n      RouterModule\n   ],\n   declarations: [\n   ]\n})\nexport class AppRoutingModule { }\n","import { Component, NgModule } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { map } from 'rxjs/operators';\n\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'projectnew';\n  status = true ;\n  nameval ;\n\n  onkeyup(firstname){\n\n      console.log(firstname);\n  }\n\n\n  favouritechanged(){\n\n   console.log(this.status);\n  }\n}\n","<!--<input  [(ngModel)]=\"nameval\"  type=\"text\" (keyup.Enter)=\"onkeyup(nameval)\" >\n\n<div>\n\n  {{nameval}}\n</div>\n<app-favorite  (change)=\"favouritechanged()\" [state]=\"status\">\n\n\n</app-favorite>\n<app-panel>\n<ng-container class=\"header\"> \n  i select header\n</ng-container>\n<ng-container class=\"body\">\n itshare\n</ng-container>\n\n</app-panel> -->\n<!-- <app-directives></app-directives> --> \n<!--<app-login></app-login> -->\n<!--<app-data></app-data> -->\n<app-routing-component></app-routing-component>\n<main role=\"main\" class=\"container\">\n\n <router-outlet></router-outlet>\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { CustomFormsModule } from 'ngx-custom-validators';\n\nimport { FavoriteComponent } from './favorite/favorite.component';\nimport { SummaryPipe } from './summary.pipe';\nimport { PanelComponent } from './panel/panel.component';\nimport { DirectivesComponent } from './directives/directives.component';\nimport { InputFormateDirective } from './input-formate.directive';\nimport { LoginComponent } from './login/login.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { DataComponent } from './data/data.component';\nimport { RoutingComponentComponent } from './routing-component/routing-component.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap' ;\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      FavoriteComponent,\n      SummaryPipe,\n      PanelComponent,\n      DirectivesComponent,\n      InputFormateDirective,\n      LoginComponent,\n      DataComponent,\n      RoutingComponentComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      ReactiveFormsModule,\n      CustomFormsModule,\n      HttpClientModule,\n      NgbModule\n   ],\n   providers: [],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AnyARecord } from 'dns';\nimport { PostsService } from './../services/posts.service';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css']\n})\nexport class DataComponent implements OnInit, OnDestroy {\n\n  // tslint:disable-next-line:no-inferrable-types\n constructor(private postservice: PostsService) { }\n  ngOnDestroy(): void {\n  }\n\n // tslint:disable-next-line:member-ordering\n posts: any[5001];\n  ngOnInit(): void {\n    this.postservice.getposts().subscribe(res => {\n    this.posts =   res ;\n     });\n  }\n\n  updatepost(post, title: HTMLInputElement){\n    this.postservice.posts = this.posts ;\n    this.postservice.updatepost(post , title);\n    this.posts[this.postservice.index] =  this.postservice.posts[this.postservice.index] ;\n  }\n\n  TakeData(post){\n    console.log(post.title );\n  }\n\n\n  deletePosts(post){\n    this.postservice.deletePosts(post);\n   // this.posts = this.postservice.posts ;\n    this.posts.splice(this.postservice.index, 1 ) ;\n  }\n\n\n  createposts(title: HTMLInputElement){\n    const post = {\n      title : title.value,\n      id: ''\n    } ;\n    this.postservice.createposts(post).subscribe(response => {\n      this.posts.splice(0, 0, post) ;\n    });\n  }\n\n\n\n\n}\n","<!-- <ul class=\"list-group\">\n    <li *ngFor=\"let post of posts\" class=\"list-group-item\">\n\n        {{post.title}}\n    </li>\n</ul> --> \n<br/> <br/> \n<input type=\"text\" class=\"form-control-lg \" #title (keyup.enter)=\"createposts(title)\">\n<br/><br/>\n<table class=\"table table-bordered table-hover table-active\">\n    <tr>\n        <th>ID</th>\n        <th>Title</th>\n        <th>Url</th>\n        <th> </th>\n        <th></th>\n    </tr>\n    <tbody>\n        <tr class=\"table-light\" *ngFor=\"let post of posts \" (click)=\"TakeData(post)\">\n            <td> {{post.id}}     </td>\n            <td> {{post.title}}   </td>\n            <td> {{post.url}}   </td>\n            <td> <button class=\"btn btn-outline-warning\" (click)=\"updatepost(post,title)\" >\n                 update</button> </td>\n            <td> <button class=\"btn btn-outline-danger\"    (click)=\"deletePosts(post)\"\n                  > delete</button> </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-directives',\n  templateUrl: './directives.component.html',\n  styleUrls: ['./directives.component.css']\n})\nexport class DirectivesComponent implements OnInit {\n  constructor() { }\n\n  Person: string[] = ['ahmed' , 'hossam', 'ali'] ;\n  PeopleCountry: any[] = [\n    {country : 'egypt',\n     names : [  {name: 'it share'}, { name: 'mansura training' }\n            ]\n    },\n    { country: 'turkey',\n      names : [{name: 'istanbul' } , { name: 'ankra' }\n              ]\n    }\n\n  ];\n  default = 'courses';\n\n  courses = [{ id : 1 , CourseName: 'java'} ,\n  { id : 2 , CourseName : 'python'}\n\n];\n  value1 = ' ' ;\n  i = 0 ;\n\n  WhatColor = true ;\n  onadd(){\n    this.courses.push( { id : 3 , CourseName : this.value1});\n    this.value1 = '';\n\n  }\n  mapcolor(){\n\n    this.WhatColor = !this.WhatColor ;\n  }\n  setview(defaultview){\n\n     this.default = defaultview ;\n  }\n  onremove(course){\n    const index = this.courses.indexOf(course.CourseName);\n    this.courses.splice(index, 1);\n  }\n  trackbycourse(index , course)\n  {\n    return course ? course.id : undefined ;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<ul>\n  <li *ngFor=\"let item of Person; let i =index\">\n   {{i+1}} - {{item}}\n  </li>\n</ul>\n\n<br/>\n\n<ul *ngFor=\"let p of PeopleCountry\">\n  <li> {{ p.country}} </li>\n  <ul>\n    <li *ngFor=\"let item of p.names\"> {{item.name}}</li>\n  </ul>\n</ul>\n\n\n<br/>\n<br/>\n<button (click)=\"onadd()\"> add </button>\n<input type=\"text\" [(ngModel)]=\"value1\" class=\"form-control\">\n\n<br/>\n<!--\n<div *ngIf=\"courses.length > 0; then temp else temp0\">\n\n</div>\n\n<ng-template #temp>\n\n  <ul *ngFor=\"let course of courses ;  trackBy: trackbycourse \">\n    <li><button (click)=\"onremove(course)\"> remove</button>  {{course.CourseName}}    </li>\n  </ul>-->\n<!--</ng-template>\n<ng-template #temp0>\n  no data yet\n</ng-template>-->\n<!--<div  [hidden]=\"courses.length === 0\">\n  \n  <ul *ngFor=\"let course of courses ;  trackBy: trackbycourse \">\n    <li><button (click)=\"onremove(course)\"> remove</button>  {{course.CourseName}}    </li>\n  </ul>\n</div>\n\n<div [hidden]=\"courses.length  > 0\">\n no data yet here \n</div>\n-->\n\n<ul class=\"nav nav-pills justify-content-end mr-5\">\n \n  <li class=\"nav-item\"  > \n     <a   (click)=\"setview('certifications') \" class=\"nav-link\" [class.active]=\"default === 'certifications'\"> certification </a> </li>\n  <li class=\"nav-item\"   >  \n    <a    (click)=\"setview('courses')\"  class=\"nav-link\" [class.active]=\"default === 'courses'\"> courses </a> </li>\n</ul>\n\n\n\n<div [ngSwitch]=\"default\">\n  <div *ngSwitchCase=\"'courses'\"> list of courses</div>\n  <div *ngSwitchCase=\"'certifications'\">list of certificates</div>\n \n</div>\n\n\n<button (click)=\"mapcolor()\"\n\n[ngStyle]=\"{'background-color':WhatColor?'red':'blue'}\"\n\n> hello </button>\n\n<input type=\"text\" class=\"form-control-sm\"  InputFormate [formate]=\"'touppercase'\" >\n","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-favorite',\n  templateUrl: './favorite.component.html',\n  styleUrls: ['./favorite.component.css']\n})\nexport class FavoriteComponent implements OnInit {\n\n @Input('state') isfavourite = false ;\n @Output() change = new EventEmitter();\n  Employee = {\n    name: 'mohamed abd elhamed',\n    rating : 5.94 ,\n    salary : 5000 ,\n    hiringdate : new Date(2020, 9, 9)\n  };\n  news = `The massive explosion has killed at least 73 people with many more feared dead, Lebanon's health minister says`;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  onfavouriteclick()\n  {\n    this.isfavourite = !this.isfavourite ;\n    this.change.emit() ;\n  }\n}\n","\n<span class=\"fa fa-3x\"  \n\n[class.fa-heart]='isfavourite'\n[class.fa-heart-o] ='!isfavourite'\n\n(click)=\"onfavouriteclick()\"\n>\n\n</span>\n\n<div>\n{{Employee.name | uppercase }}\n{{ Employee.salary | currency:'usd':true}}\n<br/>\n{{Employee.hiringdate | date:'shortDate'}}\n<br/>\n{{ news | summary}}\n\n\n</div>","import { Directive, HostListener, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[InputFormate]'\n})\nexport class InputFormateDirective {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('formate') formate ;\n  @HostListener('focus') onFocus(){\n    console.log('focus');\n  }\n\n @HostListener('blur') onBlur(){\n    const valueget: string = this.ref.nativeElement.value ;\n    if ( this.formate === 'touppercase')\n    {\n      this.ref.nativeElement.value = valueget.toUpperCase();\n    }else if (this.formate === 'tolowercase') {\n      this.ref.nativeElement.value = valueget.toLowerCase();\n    }else{\n      this.ref.nativeElement.value = valueget.toUpperCase();\n    }\n  }\n\n  constructor(private ref: ElementRef) { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ngx-custom-validators';\nimport { UniqnessValidator } from './../validations/uniqness.customvald';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n /* submit(f){\n   console.log(f);\n  }*/\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required] , UniqnessValidator.CheckUniqness),\n    password: new FormControl()\n  });\n  login(){\n\n    return this.form.setErrors({invalidlogin: true});\n  }\n\n  get email()\n  {\n    return this.form.get('email');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<form [formGroup]=\"form\"  (ngSubmit)=\"login()\">\n  <div *ngIf=\"form.errors\" class=\"alert alert-danger\">\n   user name or password incorrect \n  </div>\n  \n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Email address</label>\n      <input type=\"email\" class=\"form-control\" \n      formControlName=\"email\"\n      id=\"email\"\n       >\n\n       <div *ngIf=\"email.pending\">\n\n        <img \n        class=\"img img-thumbnail \" height=\"50\" width=\"50\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/b/b9/Youtube_loading_symbol_1_(wobbly).gif\"\n         >\n       </div>\n\n      <div  *ngIf=\"email.touched && email.invalid\" class=\"alert alert-danger\">\n        <div  *ngIf=\"email.errors.CheckUniqness\" class=\"alert alert-danger\">\n         \n          Email already exist\n         </div>\n       </div>\n\n\n      \n\n\n       <div *ngIf=\"email.errors?.email\" class=\"alert alert-danger\">\n       <p>\n           you must enter mail\n       </p>\n       </div>\n\n       <div *ngIf=\"email.errors?.range\" class=\"alert alert-danger\">\n        <p>\n           your range must between 10 and 20\n        </p>\n        </div>\n      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Password</label>\n      <input type=\"password\"\n      formControlName=\"password\"\n      class=\"form-control\" id=\"exampleInputPassword1\">\n    </div>\n   \n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css']\n})\nexport class PanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" >\n<div class=\"card-header\">\n <ng-content select=\".header\"></ng-content>\n</div>\n<div class=\"card-body\">\n\n    <ng-content select=\".body\"></ng-content>\n</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-routing-component',\n  templateUrl: './routing-component.component.html',\n  styleUrls: ['./routing-component.component.css']\n})\nexport class RoutingComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand\" routerLink=\"/\">NavbarITShare</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/favorite\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/data\">Data</a>\n      </li>\n     \n      <li ngbDropdown   class=\"nav-item dropdown show\">\n        <a   ngbDropdownToggle class=\"nav-link dropdown-toggle show\"  id=\"dropdown01\" \n        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\n        <div ngbDropdownMenu class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n          <a  ngbDropdownItem class=\"dropdown-item\" routerLink=\"/login\">Login</a>\n          <a  ngbDropdownItem class=\"dropdown-item\" routerLink=\"/data\">Data</a>\n          <a  ngbDropdownItem class=\"dropdown-item\" routerLink=\"/favorite\">Favorite</a>\n        </div>\n      </li>\n    </ul>\n   \n  </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n  url  = 'https://jsonplaceholder.typicode.com/photos';\n   posts: any[5001];\n   index: number ;\n  constructor(private http: HttpClient) { }\n\n  getposts()\n  {\n    return   this.http.get(this.url);\n  }\n\n  deletePosts(post){\n\n    this.http.delete(this.url + '/' + post.id  ).subscribe(response => {\n\n      const index =  this.posts.map(e => e.title).indexOf(post.title);\n     // const index = this.posts.indexof(post) ;\n      this.index = index ;\n      this.posts.splice(index, 1);\n\n    });\n\n\n\n\n\n  }\n\n\n\n  updatepost(post, title: HTMLInputElement ){\n    const posted = {\n      title : title.value,\n      id: post.id\n    } ;\n    this.http.put(this.url + '/' + post.id , posted ).subscribe(response => {\n\n      const index =  this.posts.map(e => e.title).indexOf(post.title);\n     // const index = this.posts.indexof(post) ;\n      this.index = index ;\n      this.posts[index] = response ;\n      console.log(response);\n\n    });\n\n  }\n\n  createposts( post){\n    return  this.http.post(this.url, post);\n  }\n\n\n}\n","import { Pipe, PipeTransform, Optional } from '@angular/core';\n\n@Pipe({\n  name: 'summary'\n})\nexport class SummaryPipe implements PipeTransform {\n\n  transform(value: string ,  limit?: number ): unknown {\n      if (!value) { return null ; }\n      const actuallimit = (limit) ? limit : 20 ;\n      return value.substring(0, actuallimit) + '.............' ;\n  }\n\n}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { promise } from 'protractor';\r\nimport { resolve } from 'dns';\r\nimport { rejects } from 'assert';\r\n\r\nexport class UniqnessValidator{\r\n\r\nstatic CheckUniqness(control: AbstractControl): Promise<ValidationErrors>|null\r\n{\r\n\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise(( resolve, reject) => {\r\n\r\n        setTimeout(() => {\r\n            if (control.value === 'gohr915@gmail.com')\r\n            {\r\n                resolve({CheckUniqness: true}) ;\r\n            }else{\r\n               resolve(null) ;\r\n            }\r\n        }, 2000);\r\n\r\n    });\r\n\r\n   /* if ( (control.value as string).indexOf(' ') !== -1)\r\n     {\r\n         return {CheckUniqness: true};\r\n     }else{\r\n\r\n        return null ;\r\n     }*/\r\n// tslint:disable-next-line:eofline\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}